= Music Generator =

Use Markov Chains to generate music.

Author: Andrew Pak, Chengying Wang, Peng Zhao


== 04/19/2015 ==

Found a library for processing midi in Python. To install, run:

<pre>
python library/python-midi-master/setup.py install
</pre>


Midi write function is working. Run:

<pre>
python testMidiWrite.py
</pre>

It will generate a midi file which plays "Twinkle, Twinkle, Little Star"


Midi read function is working. Run:

<pre>
python testMidiRead.py
</pre>

It will read in midis/FurElise.mid , change all C notes to C#, and write the
results song to midis/FurEliseWeird.mid . As a result, "Fur Elise" is changed
from A minor to A major.


== 04/20/2015 ==

Scraped 1,700 classical music from midiworld.com. You can see them in:
<pre>
midis\midiworld\classic\
</pre>
If you are interested, the code that downloaded these files is in:
<pre>
scrape\
</pre>
But you will need to install [http://lxml.de/ lxml] and [http://scrapy.org/ scrapy] to run it.

highestPlausibilityKeys generates the sequence of keys and notes given a transition matrix, and is the file used to create our musical output. transitionMatrix is our program that generates our transition matrix based on markov chaining, determining the most likely sequence of keys. processMidi converts a midi input into a sequence of keys and variables readable by our other program functions.